package com.activity;

import java.util.Arrays;
import java.util.List;

import com.facebook.Session;
import com.facebook.SessionLoginBehavior;
import com.facebook.android.AsyncFacebookRunner;
import com.facebook.android.DialogError;
import com.facebook.android.Facebook;
import com.facebook.android.FacebookError;
import com.facebook.android.Facebook.DialogListener;
import com.tastesync.MainActivity;
import com.tastesync.R;

import conm.utils.CommonUtil;

import android.os.Bundle;
import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.content.SharedPreferences;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;

@SuppressWarnings("deprecation")
public class WelcomeActivity extends Activity {
	private static String APP_ID = "340085532797158";
	// Instance of Facebook Class
	private Facebook facebook = new Facebook(APP_ID);
	private AsyncFacebookRunner mAsyncRunner;
	String FILENAME = "AndroidSSO_data";
	private SharedPreferences mPrefs;

	Button btn_login;
	private ProgressDialog mProgressDialog;
	private Session.StatusCallback statusCallback = new SessionStatusCallback();


	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_welcome);
		init();
		handle();
	}

	public void init() {
		btn_login = (Button) findViewById(R.id.btn_login_facebook);
		mProgressDialog = new ProgressDialog(this);
		mProgressDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
		mProgressDialog.setMessage("Please wait...");
		mProgressDialog.setCancelable(false);
	}

	public void handle() {
		btn_login.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				// loginToFacebook();
				if (CommonUtil.isNetworkAvailable(WelcomeActivity.this)) {
					Login();
					/*
					 * Intent intent = new Intent( WellcomeActivity.this,
					 * LoginSingleActivity.class); startActivity(intent);
					 */
				} else {
					CommonUtil.dialogNotify(WelcomeActivity.this,
							"Not connect network!");
				}
			}
		});
	}

	public void Login() {
		mProgressDialog.show();
		Session session = Session.getActiveSession();
		if (!session.isOpened() && !session.isClosed()) {
			Session.OpenRequest openRequest = new Session.OpenRequest(this)
					.setCallback(statusCallback);
			List<String> readPermissions = Arrays.asList("user_photos",
					"email", "read_friendlists", "user_location",
					"user_birthday", "user_likes");
			openRequest.setPermissions(readPermissions);
			openRequest.setLoginBehavior(SessionLoginBehavior.SUPPRESS_SSO);
			session.openForRead(openRequest);

		} else {

			Session.openActiveSession(this, true, statusCallback);
		}
	}

}
